"""
Django settings for crudapp project.

Generated by 'django-admin startproject' using Django 5.2.6.
"""

from pathlib import Path
from decouple import config
import os # <-- REQUIRED for setting environment variables

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
SECRET_KEY = 'django-insecure-qm-j53r7%_325j2*j+z9ea47g!y9!#kt47&&_e2yo0bf*cg357'
DEBUG = config('DEBUG', default=True, cast=bool) # Switched to using config() for better environment handling
ALLOWED_HOSTS = []

# --- START OF LOCAL FIX FOR OAUTH ---
# The oauthlib library requires HTTPS, but for local development (http://127.0.0.1:8000), 
# we must temporarily bypass this security check to prevent InsecureTransportError. 
if DEBUG:
    # This line tells the oauthlib to allow HTTP (insecure) transport for local development.
    os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'
# --- END OF LOCAL FIX FOR OAUTH ---

# Application definition
INSTALLED_APPS = [
	# Default apps
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.sites',

	# Your app
	'medicines',

	# Allauth apps
	'allauth',
	'allauth.account',
	'allauth.socialaccount',
	'allauth.socialaccount.providers.google',

	# Notification
	'background_task',
]

AUTHENTICATION_BACKENDS = [
	'django.contrib.auth.backends.ModelBackend',
	'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1

# Authentication redirects
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'

# Optional allauth settings
ACCOUNT_EMAIL_VERIFICATION = 'none'
ACCOUNT_AUTHENTICATION_METHOD = 'username'
ACCOUNT_EMAIL_REQUIRED = False

# -------------------------------
# GOOGLE SIGNUP SETTINGS
# -------------------------------
SOCIALACCOUNT_PROVIDERS = {
	'google': {
		'APP': {
			'client_id': config('GOOGLE_CLIENT_ID'),
			'secret': config('GOOGLE_CLIENT_SECRET'),
			'key': ''
		},
		'SCOPE': [
			'profile',
			'email',
		],
		'AUTH_PARAMS': {
			'access_type': 'online',
		}
	}
}

# -------------------------------
# GOOGLE CALENDAR SETTINGS
# -------------------------------
GOOGLE_CALENDAR_CLIENT_ID = config('GOOGLE_CALENDAR_ID')
GOOGLE_CALENDAR_CLIENT_SECRET = config('GOOGLE_CALENDAR_SECRET')
GOOGLE_CALENDAR_REDIRECT_URI = config(
	'GOOGLE_CALENDAR_REDIRECT_URI',
	default='http://127.0.0.1:8000/google/calendar/callback/'
)

# Middleware
MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

VAPID_PUBLIC_KEY = config("VAPID_PUBLIC_KEY", default="")
VAPID_PRIVATE_KEY = config("VAPID_PRIVATE_KEY", default="")

ROOT_URLCONF = 'crudapp.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [BASE_DIR / "templates"],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'crudapp.wsgi.application'

# Database
DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': BASE_DIR / 'db.sqlite3',
	}
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
	{'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
	{'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
	{'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
	{'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kolkata'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'